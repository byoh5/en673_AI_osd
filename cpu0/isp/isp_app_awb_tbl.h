/* **************************************************************************
 File Name	: 	isp_app_awb_tbl.h
 Description:	EN673 - Auto White Balance module
 Designer	:	Lee, Hoon
 Date		:	14. 12. 05
 Copyright ¨Ï Eyenix Co., Ltd. All Rights Reserved.
*************************************************************************** */


//*************************************************************************************************
// AWB table
//*************************************************************************************************

#if (model_1M)

	#define	AWB_DB_MAX			DFSEL_Sens(( 107)	,( -127) ,0	,(-51)	,(-78) ,0,( 102),0,0,0)
	#define	AWB_DB_MIN      	DFSEL_Sens((-663)	,( -737) ,0	,(-724)	,(-768),0,(-705),0,0,0)	// 150423 HSH - PS4100 -705 -> -700 ?
	#define	AWB_DR_MAX      	DFSEL_Sens(( 486)	,(  447) ,0	,( 430)	,( 452),0,( 808),0,0,0)	// 150423 HSH - IMX138  430 ->  400 ?
	#define	AWB_DR_MIN      	DFSEL_Sens((-494)	,( -241) ,0	,(-285)	,(-299),0,(-252),0,0,0)

	
#elif (model_2M)	// 2015911 - WHL

	#define AWB_DB_MAX			DFSEL_Sens(0, ( 99 )	,(-180) ,(-90)	,(-58)	,(69)	, (29)	,( 43 ),(14 ),(-160))
	#define AWB_DB_MIN			DFSEL_Sens(0, ( -622)	,(-776) ,(-751) ,(-795) ,(-808) , (-440),(-400),(-728),(-552))
	#define AWB_DR_MAX			DFSEL_Sens(0, ( 352 )	,( 352) ,(503)	,(617)	,(610)	, (360) ,( 280),( 618),( 350))
	#define AWB_DR_MIN			DFSEL_Sens(0, ( -512)	,(-256) ,(-221) ,(-233) ,(-405) , (-105),(-150),(-164 ),(-150))
	
#elif (model_2M30p)

	#define AWB_DB_MAX			DFSEL_Sens(0, ( 99 )	,/*125*/32	,(12)	,(-19)	,0, (29)	,0,(-85 ),0)
	#define AWB_DB_MIN			DFSEL_Sens(0, ( -622)	,/*-817*/-787	,(-698) ,(-756) ,0, (-440),0,(-650),0)
	#define AWB_DR_MAX			DFSEL_Sens(0, ( 352 )	,/*564*/544 ,(426)	,(592)	,0, (360)	,0,( 560),0)
	#define AWB_DR_MIN			DFSEL_Sens(0, ( -512)	,/*457*/-346	,(-428) ,(-269) ,0, (-105),0,(-50 ),0)

#endif

#if (model_Sens==SENS_MN34210)   //HTY 20150213
//100713_EN773_pana1.3_lvds
//101228_EN773_pana2.0_lvds

	const int giDbDrMnl[3][2]	=	{
									{-453, -17},	// 3700K
									{-297,-203},	// 5100K
									{ -90,-339}		// 9500K
									};

	#define AWB_MTRX_GAIN	0.6

	const WORD gwCmap[64][2]  =	{	// Offset margin: MinX 128, MaxX 128, MinY 128, MaxY 128
									{0x3f00,    0x3f00 },
									{0x3f00,    0x3f00 },
									{0x3f00,    0x3f00 },
									{0x3f00,    0x3f00 },
									{0x2e3a,    0x2938 },
									{0x2b3b,    0x273a },
									{0x293b,    0x263a },
									{0x273b,    0x243a },
									{0x243b,    0x233a },
									{0x233b,    0x223a },
									{0x213b,    0x213a },
									{0x203a,    0x2039 },
									{0x1f39,    0x1f39 },
									{0x1e38,    0x1e38 },
									{0x1d36,    0x1e38 },
									{0x1c33,    0x1d37 },
									{0x1b31,    0x1c36 },
									{0x1a30,    0x1c34 },
									{0x192f,    0x1b33 },
									{0x182d,    0x1a32 },
									{0x172c,    0x1930 },
									{0x172a,    0x192f },
									{0x1628,    0x182d },
									{0x1526,    0x172c },
									{0x1424,    0x162b },
									{0x1323,    0x1529 },
									{0x1221,    0x1528 },
									{0x1220,    0x1426 },
									{0x111f,    0x1325 },
									{0x101e,    0x1223 },
									{0x0f1d,    0x1121 },
									{0x0f1c,    0x1120 },
									{0x0e1b,    0x101e },
									{0x0d1a,    0xf1d  },
									{0x0c19,    0xf1c  },
									{0x0c18,    0xe1a  },
									{0x0b17,    0xe19  },
									{0x0b16,    0xd18  },
									{0x0a15,    0xc17  },
									{0x0a15,    0xc16  },
									{0x0914,    0xb14  },
									{0x0913,    0xa14  },
									{0x0812,    0xa13  },
									{0x0811,    0x912  },
									{0x0711,    0x812  },
									{0x0710,    0x811  },
									{0x070f,    0x710  },
									{0x060e,    0x710  },
									{0x060e,    0x70f  },
									{0x050d,    0x60e  },
									{0x050c,    0x60e  },
									{0x050b,    0x60d  },
									{0x050b,    0x50c  },
									{0x050a,    0x50c  },
									{0x050a,    0x50b  },
									{0x050a,    0x50a  },
									{0x0509,    0x40a  },
									{0x0609,    0x409  },
									{0x3f00,    0x409  },
									{0x3f00,    0x408  },
									{0x3f00,    0x3f00 },
									{0x3f00,    0x3f00 },
									{0x3f00,    0x3f00 },
									{0x3f00,    0x3f00 }
							};
	
#elif (model_Sens==SENS_MN34227) || (model_Sens==SENS_MN34229)
// mn34220

	const int giDbDrMnl[3][2]	=	{
									{-320,-145},	// 3700K
									{-161,-323},	// 5100K
									{  99,-512}		// 9500K
									};

	#define AWB_MTRX_GAIN	0.7

	const WORD gwCmap[64][2]  =	{	// Offset margin: MinX 128, MaxX 128, MinY 128, MaxY 128
									{0x3f00, 0x3f00 },
									{0x3f00, 0x3f00 },
									{0x3f00, 0x3f00 },
									{0x3f00, 0x3f00 },
									{0x3f00, 0x2938 },
									{0x3137, 0x273a },
									{0x2c39, 0x263a },
									{0x2939, 0x243a },
									{0x2639, 0x233a },
									{0x2539, 0x223a },
									{0x2439, 0x213a },
									{0x2339, 0x2039 },
									{0x2139, 0x1f39 },
									{0x2038, 0x1e38 },
									{0x1f38, 0x1e38 },
									{0x1e37, 0x1d37 },
									{0x1d36, 0x1c36 },
									{0x1c34, 0x1c34 },
									{0x1b33, 0x1b33 },
									{0x1a32, 0x1a32 },
									{0x1930, 0x1930 },
									{0x192f, 0x192f },
									{0x182d, 0x182d },
									{0x172c, 0x172c },
									{0x162b, 0x162b },
									{0x1529, 0x1529 },
									{0x1528, 0x1528 },
									{0x1426, 0x1426 },
									{0x1325, 0x1325 },
									{0x1223, 0x1223 },
									{0x1121, 0x1121 },
									{0x1120, 0x1120 },
									{0x101e, 0x101e },
									{0x0f1d, 0xf1d  },
									{0x0f1c, 0xf1c  },
									{0x0e1a, 0xe1a  },
									{0x0e19, 0xe19  },
									{0x0d18, 0xd18  },
									{0x0c17, 0xc17  },
									{0x0c16, 0xc16  },
									{0x0b14, 0xb14  },
									{0x0a14, 0xa14  },
									{0x0a13, 0xa13  },
									{0x0912, 0x912  },
									{0x0812, 0x812  },
									{0x0811, 0x811  },
									{0x0710, 0x710  },
									{0x0710, 0x710  },
									{0x070f, 0x70f  },
									{0x060e, 0x60e  },
									{0x060e, 0x60e  },
									{0x060d, 0x60d  },
									{0x050c, 0x50c  },
									{0x050c, 0x50c  },
									{0x050b, 0x50b  },
									{0x050a, 0x50a  },
									{0x050a, 0x40a  },
									{0x0409, 0x409  },
									{0x0609, 0x409  },
									{0x3f00, 0x408  },
									{0x3f00, 0x3f00 },
									{0x3f00, 0x3f00 },
									{0x3f00, 0x3f00 },
									{0x3f00, 0x3f00 }
							};
	
	
#elif (model_Sens==SENS_MN34420)		//160503 LGH : MN34420
	// mn34420
	
		const int giDbDrMnl[3][2]	=	{
										{-509,-58 },	// 3700K
										{-356,-223},	// 5100K
										{-164,-326} 	// 9500K
										};
	
	#define AWB_MTRX_GAIN	0.6
	
		const WORD gwCmap[64][2]  = {	// Offset margin: MinX 128, MaxX 128, MinY 128, MaxY 128
										{0x3f00, 0x3f00 },
										{0x3f00, 0x3f00 },
										{0x3f00, 0x3f00 },
										{0x3f00, 0x3f00 },
										{0x343a, 0x2938 },
										{0x323b, 0x273a },
										{0x303c, 0x263a },
										{0x2e3c, 0x243a },
										{0x2c3c, 0x233a },
										{0x2a3c, 0x223a },
										{0x293c, 0x213a },
										{0x273c, 0x2039 },
										{0x253c, 0x1f39 },
										{0x243b, 0x1e38 },
										{0x233a, 0x1e38 },
										{0x2239, 0x1d37 },
										{0x2138, 0x1c36 },
										{0x1f35, 0x1c34 },
										{0x1e32, 0x1b33 },
										{0x1d30, 0x1a32 },
										{0x1c2e, 0x1930 },
										{0x1b2c, 0x192f },
										{0x1a2a, 0x182d },
										{0x1a29, 0x172c },
										{0x1927, 0x162b },
										{0x1825, 0x1529 },
										{0x1723, 0x1528 },
										{0x1621, 0x1426 },
										{0x151f, 0x1325 },
										{0x141d, 0x1223 },
										{0x131c, 0x1121 },
										{0x131b, 0x1120 },
										{0x121a, 0x101e },
										{0x1119, 0xf1d	},
										{0x1018, 0xf1c	},
										{0x1017, 0xe1a	},
										{0x0f16, 0xe19	},
										{0x0e15, 0xd18	},
										{0x0d15, 0xc17	},
										{0x0d14, 0xc16	},
										{0x0c13, 0xb14	},
										{0x0b12, 0xa14	},
										{0x0a12, 0xa13	},
										{0x0a11, 0x912	},
										{0x0a11, 0x812	},
										{0x0910, 0x811	},
										{0x090f, 0x710	},
										{0x090f, 0x710	},
										{0x080e, 0x70f	},
										{0x080e, 0x60e	},
										{0x080d, 0x60e	},
										{0x070d, 0x60d	},
										{0x070c, 0x50c	},
										{0x070b, 0x50c	},
										{0x070b, 0x50b	},
										{0x060a, 0x50a	},
										{0x060a, 0x40a	},
										{0x0708, 0x409	},
										{0x3f00, 0x409	},
										{0x3f00, 0x408	},
										{0x3f00, 0x3f00 },
										{0x3f00, 0x3f00 },
										{0x3f00, 0x3f00 },
										{0x3f00, 0x3f00 }
								};
	

#elif(model_Sens==SENS_IMX291) || (model_Sens==SENS_IMX327)

		const int giDbDrMnl[3][2]	=	{
										{-453, -17 },	// 3700K, 8
										{-276, -206},	// 5100K, 10
										{-69 , -319}	// 9500K, 14
										};
	
	#define AWB_MTRX_GAIN	0.7
	
		const WORD gwCmap[64][2]  = {	// Offset margin: MinX 128, MaxX 128, MinY 128, MaxY 128
										{0x3f00, 0x3f00 },
										{0x3f00, 0x3f00 },
										{0x3f00, 0x3f00 },
										{0x3f00, 0x3f00 },
										{0x3f00, 0x2938 },
										{0x2c36, 0x273a },
										{0x2a37, 0x263a },
										{0x2838, 0x243a },
										{0x2639, 0x233a },
										{0x2439, 0x223a },
										{0x2239, 0x213a },
										{0x2139, 0x2039 },
										{0x2038, 0x1f39 },
										{0x1f38, 0x1e38 },
										{0x1e37, 0x1e38 },
										{0x1d36, 0x1d37 },
										{0x1c34, 0x1c36 },
										{0x1b33, 0x1c34 },
										{0x1a31, 0x1b33 },
										{0x192f, 0x1a32 },
										{0x182d, 0x1930 },
										{0x172a, 0x192f },
										{0x1628, 0x182d },
										{0x1526, 0x172c },
										{0x1424, 0x162b },
										{0x1423, 0x1529 },
										{0x1322, 0x1528 },
										{0x1221, 0x1426 },
										{0x1120, 0x1325 },
										{0x101f, 0x1223 },
										{0x0f1e, 0x1121 },
										{0x0f1d, 0x1120 },
										{0x0e1c, 0x101e },
										{0x0e1b, 0xf1d	},
										{0x0d1a, 0xf1c	},
										{0x0c19, 0xe1a	},
										{0x0c18, 0xe19	},
										{0x0b17, 0xd18	},
										{0x0b16, 0xc17	},
										{0x0a15, 0xc16	},
										{0x0a14, 0xb14	},
										{0x0a13, 0xa14	},
										{0x0913, 0xa13	},
										{0x0912, 0x912	},
										{0x0811, 0x812	},
										{0x0810, 0x811	},
										{0x0810, 0x710	},
										{0x070f, 0x710	},
										{0x070f, 0x70f	},
										{0x070e, 0x60e	},
										{0x060e, 0x60e	},
										{0x060d, 0x60d	},
										{0x060c, 0x50c	},
										{0x060c, 0x50c	},
										{0x060b, 0x50b	},
										{0x070a, 0x50a	},
										{0x3f00, 0x40a	},
										{0x3f00, 0x409	},
										{0x3f00, 0x409	},
										{0x3f00, 0x408	},
										{0x3f00, 0x3f00 },
										{0x3f00, 0x3f00 },
										{0x3f00, 0x3f00 },
										{0x3f00, 0x3f00 }
								};
	
#elif	0//(model_Sens==SENS_IMX327)
	
		const int giDbDrMnl[3][2]	=	{
										{-471,  38 },	// 3700K, 8
										{-316, -139},	// 5100K, 10
										{-136, -245}	// 9500K, 14
										};
	
	#define AWB_MTRX_GAIN	0.7
	
		const WORD gwCmap[64][2]  = {	// Offset margin: MinX 128, MaxX 128, MinY 128, MaxY 128
										{0x3f00, 0x3f00 },
										{0x3f00, 0x3f00 },
										{0x353a, 0x3f00 },
										{0x333c, 0x3f00 },
										{0x303c, 0x2938 },
										{0x2e3c, 0x273a },
										{0x2c3d, 0x263a },
										{0x2a3d, 0x243a },
										{0x283d, 0x233a },
										{0x263c, 0x223a },
										{0x253c, 0x213a },
										{0x243c, 0x2039 },
										{0x233b, 0x1f39 },
										{0x223b, 0x1e38 },
										{0x223b, 0x1e38 },
										{0x213a, 0x1d37 },
										{0x203a, 0x1c36 },
										{0x1f38, 0x1c34 },
										{0x1e37, 0x1b33 },
										{0x1d35, 0x1a32 },
										{0x1b34, 0x1930 },
										{0x1a33, 0x192f },
										{0x1932, 0x182d },
										{0x1831, 0x172c },
										{0x172f, 0x162b },
										{0x162d, 0x1529 },
										{0x152c, 0x1528 },
										{0x152a, 0x1426 },
										{0x1428, 0x1325 },
										{0x1325, 0x1223 },
										{0x1222, 0x1121 },
										{0x1120, 0x1120 },
										{0x101e, 0x101e },
										{0x101d, 0xf1d	},
										{0x0f1b, 0xf1c	},
										{0x0f1a, 0xe1a	},
										{0x0e19, 0xe19	},
										{0x0d18, 0xd18	},
										{0x0d17, 0xc17	},
										{0x0c16, 0xc16	},
										{0x0c15, 0xb14	},
										{0x0b13, 0xa14	},
										{0x0a13, 0xa13	},
										{0x0a12, 0x912	},
										{0x0911, 0x812	},
										{0x0911, 0x811	},
										{0x0810, 0x710	},
										{0x0710, 0x710	},
										{0x070f, 0x70f	},
										{0x060f, 0x60e	},
										{0x060e, 0x60e	},
										{0x060e, 0x60d	},
										{0x060d, 0x50c	},
										{0x050d, 0x50c	},
										{0x050c, 0x50b	},
										{0x050c, 0x50a	},
										{0x050b, 0x40a	},
										{0x050a, 0x409	},
										{0x0609, 0x409	},
										{0x0708, 0x408	},
										{0x3f00, 0x3f00 },
										{0x3f00, 0x3f00 },
										{0x3f00, 0x3f00 },
										{0x3f00, 0x3f00 }
								};
	
#elif(model_Sens==SENS_IMX307)

	const int giDbDrMnl[3][2]	=	{
									{-454, 45 },	// 3700K, 8
									{-310, -92},	// 5100K, 10
									{-90 , -211}	// 9500K, 14
									};

	#define AWB_MTRX_GAIN	0.7

	const WORD gwCmap[64][2]  =	{	// Offset margin: MinX 128, MaxX 128, MinY 128, MaxY 128
									{0x3f00, 0x3f00 },
									{0x3f00, 0x3f00 },
									{0x3f00, 0x3f00 },
									{0x373b, 0x3f00 },
									{0x333c, 0x2938 },
									{0x2f3c, 0x273a },
									{0x2d3c, 0x263a },
									{0x293c, 0x243a },
									{0x263c, 0x233a },
									{0x253b, 0x223a },
									{0x223a, 0x213a },
									{0x213a, 0x2039 },
									{0x1f39, 0x1f39 },
									{0x1e37, 0x1e38 },
									{0x1c36, 0x1e38 },
									{0x1b35, 0x1d37 },
									{0x1a33, 0x1c36 },
									{0x1932, 0x1c34 },
									{0x1831, 0x1b33 },
									{0x1730, 0x1a32 },
									{0x162e, 0x1930 },
									{0x162c, 0x192f },
									{0x152b, 0x182d },
									{0x1429, 0x172c },
									{0x1427, 0x162b },
									{0x1325, 0x1529 },
									{0x1222, 0x1528 },
									{0x1220, 0x1426 },
									{0x111e, 0x1325 },
									{0x111d, 0x1223 },
									{0x101d, 0x1121 },
									{0xf1b, 0x1120 },
									{0xf1a, 0x101e },
									{0xe18, 0xf1d  },
									{0xe17, 0xf1c  },
									{0xd16, 0xe1a  },
									{0xc16, 0xe19  },
									{0xc15, 0xd18  },
									{0xb14, 0xc17  },
									{0xa14, 0xc16  },
									{0xa13, 0xb14  },
									{0x912, 0xa14  },
									{0x912, 0xa13  },
									{0x811, 0x912  },
									{0x711, 0x812  },
									{0x710, 0x811  },
									{0x610, 0x710  },
									{0x60f, 0x710  },
									{0x60e, 0x70f  },
									{0x60e, 0x60e  },
									{0x50d, 0x60e  },
									{0x50c, 0x60d  },
									{0x50b, 0x50c  },
									{0x50b, 0x50c  },
									{0x40a, 0x50b  },
									{0x40a, 0x50a  },
									{0x40a, 0x40a  },
									{0x40a, 0x409  },
									{0x409, 0x409  },
									{0x408, 0x408  },
									{0x3f00, 0x3f00 },
									{0x3f00, 0x3f00 },
									{0x3f00, 0x3f00 },
									{0x3f00, 0x3f00 }
							};

#elif (model_Sens==SENS_IMX225)
//150304_EN773V_IMX225

	const int giDbDrMnl[3][2]	=	{
									{-465,-83 },	// 3700K,
									{-278,-274},	// 5100K,
									{-52, -410} 	// 9500K,
									};

	#define AWB_MTRX_GAIN	0.8

	const WORD gwCmap[64][2]  =	{	// Offset margin: MinX 128, MaxX 128, MinY 128, MaxY 128
									{0x3f00, 0x3f00 },
									{0x3f00, 0x3f00 },
									{0x3f00, 0x3f00 },
									{0x3538, 0x3f00 },
									{0x3239, 0x2938 },
									{0x303a, 0x273a },
									{0x2e3a, 0x263a },
									{0x2d3a, 0x243a },
									{0x2a3b, 0x233a },
									{0x283b, 0x223a },
									{0x273b, 0x213a },
									{0x2639, 0x2039 },
									{0x2438, 0x1f39 },
									{0x2337, 0x1e38 },
									{0x2135, 0x1e38 },
									{0x2034, 0x1d37 },
									{0x1e33, 0x1c36 },
									{0x1d31, 0x1c34 },
									{0x1c30, 0x1b33 },
									{0x1b30, 0x1a32 },
									{0x1a2e, 0x1930 },
									{0x192e, 0x192f },
									{0x182a, 0x182d },
									{0x1728, 0x172c },
									{0x1626, 0x162b },
									{0x1524, 0x1529 },
									{0x1423, 0x1528 },
									{0x1321, 0x1426 },
									{0x1220, 0x1325 },
									{0x111f, 0x1223 },
									{0x101c, 0x1121 },
									{0x101b, 0x1120 },
									{0x0f19, 0x101e },
									{0x0e17, 0xf1d  },
									{0x0e16, 0xf1c  },
									{0x0d14, 0xe1a  },
									{0x0c13, 0xe19  },
									{0x0c12, 0xd18  },
									{0x0b12, 0xc17  },
									{0x0a11, 0xc16  },
									{0x0a10, 0xb14  },
									{0x090f, 0xa14  },
									{0x090f, 0xa13  },
									{0x080e, 0x912  },
									{0x080e, 0x812  },
									{0x070d, 0x811  },
									{0x070d, 0x710  },
									{0x060c, 0x710  },
									{0x060c, 0x70f  },
									{0x060c, 0x60e  },
									{0x060b, 0x60e  },
									{0x050a, 0x60d  },
									{0x050a, 0x50c  },
									{0x0509, 0x50c  },
									{0x0509, 0x50b  },
									{0x0409, 0x50a  },
									{0x0408, 0x40a  },
									{0x0507, 0x409  },
									{0x0507, 0x409  },
									{0x3f00, 0x408  },
									{0x3f00, 0x3f00 },
									{0x3f00, 0x3f00 },
									{0x3f00, 0x3f00 },
									{0x3f00, 0x3f00 }
							};

#elif (model_Sens==SENS_IMX323) 	// 15.03.31 WHL

	const int giDbDrMnl[3][2]	=	{
									{-449,32 },	// 3700K 8
									{-291,-153},	// 5100K 10
									{-115,-257}		// 9500K 14
									};

	#define AWB_MTRX_GAIN	0.6
//	#define AWB_MTRX_GAIN	0.7	// 15.04.06 WHL

	const WORD gwCmap[64][2] =		{	// Offset margin: MinX 128, MaxX 128, MinY 128, MaxY 128
									{0x3f00, 0x3f00 },
									{0x3f00, 0x3f00 },
									{0x313c, 0x3f00 },
									{0x2f3d, 0x3f00 },
									{0x2e3d, 0x2938 },
									{0x2c3d, 0x273a },
									{0x2b3d, 0x263a },
									{0x2a3d, 0x243a },
									{0x293d, 0x233a },
									{0x273c, 0x223a },
									{0x263c, 0x213a },
									{0x253b, 0x2039 },
									{0x233a, 0x1f39 },
									{0x223a, 0x1e38 },
									{0x2139, 0x1e38 },
									{0x2038, 0x1d37 },
									{0x1f36, 0x1c36 },
									{0x1e35, 0x1c34 },
									{0x1c34, 0x1b33 },
									{0x1b33, 0x1a32 },
									{0x1931, 0x1930 },
									{0x182f, 0x192f },
									{0x172d, 0x182d },
									{0x172c, 0x172c },
									{0x162a, 0x162b },
									{0x1528, 0x1529 },
									{0x1425, 0x1528 },
									{0x1423, 0x1426 },
									{0x1322, 0x1325 },
									{0x1320, 0x1223 },
									{0x121f, 0x1121 },
									{0x121d, 0x1120 },
									{0x111c, 0x101e },
									{0x111b, 0xf1d  },
									{0x1019, 0xf1c  },
									{0x0f17, 0xe1a  },
									{0x0f15, 0xe19  },
									{0x0e15, 0xd18  },
									{0x0e13, 0xc17  },
									{0x0d13, 0xc16  },
									{0x0c12, 0xb14  },
									{0x0c12, 0xa14  },
									{0x0b11, 0xa13  },
									{0x0b11, 0x912  },
									{0x0a10, 0x812  },
									{0x0a0f, 0x811  },
									{0x090f, 0x710  },
									{0x090e, 0x710  },
									{0x080e, 0x70f  },
									{0x080d, 0x60e  },
									{0x070c, 0x60e  },
									{0x060c, 0x60d  },
									{0x060b, 0x50c  },
									{0x050b, 0x50c  },
									{0x050a, 0x50b  },
									{0x050a, 0x50a  },
									{0x050a, 0x40a  },
									{0x0509, 0x409  },
									{0x0508, 0x409  },
									{0x0607, 0x408  },
									{0x3f00, 0x3f00 },
									{0x3f00, 0x3f00 },
									{0x3f00, 0x3f00 },
									{0x3f00, 0x3f00 }
									};
	
#elif (model_Sens==SENS_OV2718) 	// 170816 KDH

	const int giDbDrMnl[3][2]	=	{
									{-436,-62 },	// 3700K
									{-290,-186},	// 5100K
									{-61,-306}		// 9500K
									};

	#define AWB_MTRX_GAIN	0.6

	const WORD gwCmap[64][2] =		{	// Offset margin: MinX 128, MaxX 128, MinY 128, MaxY 128
									{0x3f00, 0x3f00 },
									{0x3f00, 0x3f00 },
									{0x3f00, 0x3f00 },
									{0x3137, 0x3f00 },
									{0x2e3a, 0x2938 },
									{0x2b3b, 0x273a },
									{0x293b, 0x263a },
									{0x283b, 0x243a },
									{0x273b, 0x233a },
									{0x263b, 0x223a },
									{0x253b, 0x213a },
									{0x233b, 0x2039 },
									{0x223a, 0x1f39 },
									{0x213a, 0x1e38 },
									{0x203a, 0x1e38 },
									{0x1f38, 0x1d37 },
									{0x1e37, 0x1c36 },
									{0x1d36, 0x1c34 },
									{0x1c35, 0x1b33 },
									{0x1b33, 0x1a32 },
									{0x1a32, 0x1930 },
									{0x1930, 0x192f },
									{0x182f, 0x182d },
									{0x172d, 0x172c },
									{0x162b, 0x162b },
									{0x1528, 0x1529 },
									{0x1425, 0x1528 },
									{0x1323, 0x1426 },
									{0x1222, 0x1325 },
									{0x1120, 0x1223 },
									{0x101f, 0x1121 },
									{0x101e, 0x1120 },
									{0x0f1d, 0x101e },
									{0x0e1b, 0xf1d  },
									{0x0e1a, 0xf1c  },
									{0x0d18, 0xe1a  },
									{0x0c17, 0xe19  },
									{0x0c16, 0xd18  },
									{0x0b15, 0xc17  },
									{0x0a14, 0xc16  },
									{0x0a13, 0xb14  },
									{0x0912, 0xa14  },
									{0x0911, 0xa13  },
									{0x0810, 0x912  },
									{0x080f, 0x812  },
									{0x080f, 0x811  },
									{0x070e, 0x710  },
									{0x070e, 0x710  },
									{0x060d, 0x70f  },
									{0x060d, 0x60e  },
									{0x060c, 0x60e  },
									{0x060b, 0x60d  },
									{0x050b, 0x50c  },
									{0x050a, 0x50c  },
									{0x050a, 0x50b  },
									{0x0509, 0x50a  },
									{0x0409, 0x40a  },
									{0x0409, 0x409  },
									{0x0408, 0x409  },
									{0x0508, 0x408  },
									{0x3f00, 0x3f00 },
									{0x3f00, 0x3f00 },
									{0x3f00, 0x3f00 },
									{0x3f00, 0x3f00 }
									};
	
#elif(model_Sens==SENS_AR0237CSH)

	const int giDbDrMnl[3][2]	=	{
									{-439,  107},	// 3700K
									{-283,  -64},	// 5100K
									{ -92,  -144}	// 9500K
									};

	#define AWB_MTRX_GAIN	0.6

	const WORD gwCmap[64][2]  =	{	// Offset margin: MinX 128, MaxX 128, MinY 128, MaxY 128
									{0x3f00, 0x3f00 },
									{0x3f00, 0x3f00 },
									{0x3f00, 0x3f00 },
									{0x343c, 0x3f00 },
									{0x323c, 0x2938 },
									{0x303d, 0x273a },
									{0x2e3d, 0x263a },
									{0x2c3e, 0x243a },
									{0x2b3e, 0x233a },
									{0x2a3d, 0x223a },
									{0x283d, 0x213a },
									{0x263c, 0x2039 },
									{0x243b, 0x1f39 },
									{0x233a, 0x1e38 },
									{0x2239, 0x1e38 },
									{0x2138, 0x1d37 },
									{0x2037, 0x1c36 },
									{0x1f36, 0x1c34 },
									{0x1e35, 0x1b33 },
									{0x1d33, 0x1a32 },
									{0x1c32, 0x1930 },
									{0x1b31, 0x192f },
									{0x1a30, 0x182d },
									{0x192e, 0x172c },
									{0x182c, 0x162b },
									{0x172a, 0x1529 },
									{0x1625, 0x1528 },
									{0x1523, 0x1426 },
									{0x1420, 0x1325 },
									{0x131e, 0x1223 },
									{0x131c, 0x1121 },
									{0x121b, 0x1120 },
									{0x1119, 0x101e },
									{0x1018, 0xf1d  },
									{0x1016, 0xf1c  },
									{0x0f15, 0xe1a  },
									{0x0e14, 0xe19  },
									{0x0e13, 0xd18  },
									{0x0d12, 0xc17  },
									{0x0d12, 0xc16  },
									{0x0c11, 0xb14  },
									{0x0b10, 0xa14  },
									{0x0b10, 0xa13  },
									{0x0a0f, 0x912  },
									{0x090f, 0x812  },
									{0x090e, 0x811  },
									{0x080e, 0x710  },
									{0x080d, 0x710  },
									{0x070d, 0x70f  },
									{0x070d, 0x60e  },
									{0x060c, 0x60e  },
									{0x060c, 0x60d  },
									{0x050b, 0x50c  },
									{0x050b, 0x50c  },
									{0x050a, 0x50b  },
									{0x060a, 0x50a  },
									{0x0609, 0x40a  },
									{0x0708, 0x409  },
									{0x3f00, 0x409  },
									{0x3f00, 0x408  },
									{0x3f00, 0x3f00 },
									{0x3f00, 0x3f00 },
									{0x3f00, 0x3f00 },
									{0x3f00, 0x3f00 }
							};

#endif


/* EOF */

