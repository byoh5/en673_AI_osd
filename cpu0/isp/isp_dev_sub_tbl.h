/* **************************************************************************
 File Name	: 	isp_dev_sub_tbl.h
 Description:	EN673 - Device Driver
 Designer	:	Lee, Wanhee
 Date		:	17. 1. 11
 Copyright ¨Ï Eyenix Co., Ltd. All Rights Reserved.
*************************************************************************** */
	
	
#if (USE_DIGITAL_INPUT==1)
									
	#if (IMAGE_INPUT_MODE==1)||(IMAGE_INPUT_MODE==2)||(IMAGE_INPUT_MODE==3)																					
		const UINT gnTbDSubInputAddr[] = { //Address	
			0x00000011,	// Ch.A Internal EQ Setting
			0x00000012,	// Ch.A Internal EQ Setting
			0x00000021,	// Ch.B Internal EQ Setting
			0x00000022,	// Ch.B Internal EQ Setting	
			0x00000031,	// STX_PO on
			0x00000034,	// Reclocker OFF
			0x00000091,	// TXSDI output off
			0x00000094,
			0x0000009a,	// MUX Output Initial Setting
			0x0000009b,
			0x0000009c,
			0x00000041, // Ch.A Input Buffer Polarity
		//	0x00000041, // Ch.A Input Buffer Polarity // SDI P/N Invert
			0x00000051, // Ch.B Input Buffer Polarity
		//	0x00000051, // Ch.B Input Buffer Polarity // SDI P/N Invert
			0x000000db,	// VD port driver strength
			0x000000c8,	// PCK phase delay
			0x000000f7,	// Ver. date
			0x0000005d,
			0x0000005e,
			0x000000c1	// Global Clock Enable
		};
	#endif

		const UINT gnTbDSubInputInit[] = { // Data
			0x2c332aa0,	// Ch.A Internal EQ Setting
			0x0052c433,	// Ch.A Internal EQ Setting
			0x2c332aa0,	// Ch.B Internal EQ Setting
			0x0052c433,	// Ch.B Internal EQ Setting	
			0x0000f705,	// STX_PO on
			0x00273333,	// Reclocker OFF
			0x0002481f,	// TXSDI output off
			0x000010b0,
			0x00000004,	// MUX Output Initial Setting
			0x00001004,
			0x1000a00a,
			0x00003810, // Ch.A Input Buffer Polarity
		//	0x00023810, // Ch.A Input Buffer Polarity // SDI P/N Invert
			0x00003810, // Ch.B Input Buffer Polarity
		//	0x00023810, // Ch.B Input Buffer Polarity // SDI P/N Invert
			0x00000000,	// VD port driver strength
			0x60006000,	// PCK phase delay
			0x20170313,	// Ver. date
			0x6e4e647e,
			0xee6814e9,
			0x00017f00	// Global Clock Enable
		};
				
		const UINT gnTbDSubInputInitEa	  = numberof(gnTbDSubInputInit);
		
		
#elif (USE_DIGITAL_INPUT==2)
		
			const UINT gnTbDSubInputInit[] = {
				0x0300,
				0x0608,
				0x0797,
				0x0804,
				0x0964,
				0x0a04,
				0x0b64,
				0x2408,
				0x2520,
				0x400B,
				0x4104,
				0x3f70,
				0x0301,
				0x2604,
				0xb730,
				0x0302,
				0x2B14,
				0x0300,
				0x3814,
				0x3d2f,
				0x3f40,
				0x0301,
				0x1f51,
				0x20a0,
				0xa3e0,
				0xa470,
				0xa502,
				0x0304,
				0x06a1,
				0x0304,
				0xc700,
				0xc808,
				0xc91e,
				0xca32,
				0xcb58,
				0x0303,
				0xdc00,
				0xdd16,
				0xde1b,
				0xe025,
				0xe130,
				0x0301,
				0xf60e,
				0xf714,
				0xf824,
				0xf927,
				0xfA2c,
				0xfb30,
				0xfc30,
				0xfd3f,
				0xfe00,
				0x0300,
				0x3508,
				0x3604,
				0x0301,
				0x19c4,
				0x1c11,
				0x0301,
				0x5708,
				0x587f,
				0x5908,
				0x5a96,
				0x5300,
				0x5402,
				0x5508,
				0x567f,
				0x6700,
				0x6854,
				0x6900,
				0x6a5E,
				0x5b00,
				0x5c00,
				0x5d08,
				0x5e7f,
				0x5f00,
				0x6000,
				0x6100,
				0x6250,
				0x9900,
				0x9a54,
				0x9b08,
				0x9c7f,
				0x7b00,
				0x7c00,
				0x7d05,
				0x7e7c,
				0x6f00,
				0x7000,
				0x7105,
				0x727a,
				0x7300,
				0x7400,
				0x7505,
				0x7678,
				0x7708,
				0x7895,
				0x7908,
				0x7a96,
				0x8f00,
				0x9052,
				0x8B00,
				0x8C64,
				0x8D08,
				0x8E80,
				0x8708,
				0x8848,
				0x8908,
				0x8a7c,
				0x9508,
				0x9680,
				0x9708,
				0x988f,
				0x9108,
				0x927e,
				0x9308,
				0x9497,
				0x7f08,
				0x8080,
				0x8108,
				0x828f,
				0x8308,
				0x8480,
				0x8508,
				0x868f,
				0xb908,
				0xba80,
				0xbb08,
				0xbc8f,
				0xa10b,
				0xa284,
				0x3600,
				0x37be,
				0x3808,
				0x394e,
				0x3a00,
				0x3b03,
				0x3c00,
				0x3d07,
				0x3e00,
				0x3fbe,
				0x4008,
				0x414e,
				0x0303,
				0x3000,
				0x31ff,
				0x3240,
				0x0302,
				0x05eb,
				0x0303,
				0x3300,
				0x3400,
				0x3500,
				0x3720,
				0x3840,
				0x3980,
				0x3a60,
				0x3b40,
				0x3c20,
				0x3d10,
				0x3e08,
				0x0302,
				0x05fb,
				0x0303,
				0x3340,
				0x3440,
				0x3540,
				0x3640,
				0x3700,
				0x3840,
				0x397f,
				0x3a78,
				0x3b63,
				0x3c2f,
				0x3d0b,
				0x3e00,
				0x0309,
				0x0403,
				0x6d04,
				0x4930,
				0x4a10,
				0x4b40,
				0xad08,
				0xae10,
				0xaf20,
				0xb010,
				0xb108,
				0xb204,
				0xb360,
				0xb460,
				0xB540,
				0xB740,
				0xb803,
				0xB902,
				0xbb04,
				0x8e00,
				0x8f04,
				0x9006,
				0x9106,
				0x9204,
				0x9303,
				0x9401,
				0x9500,
				0x0300,
				0x4a08,
				0x0300,
				0x5401,
				0x5517,
				0x5680,
				0x0304,
				0x3b50,
				0x3c68,
				0x3d48,
				0x3e50,
				0x3f48,
				0x4048,
				0x4100,
				0x4200,
				0x4314,
				0x4400,
				0x4502,
				0x46e8,
				0x4700,
				0x4845,
				0x49e0,
				0x4a00,
				0x4b8b,
				0x4cc0,
				0x0304,
				0x1204,
				0x135e,
				0x1404,
				0x155e,
				0x1604,
				0x175e,
				0x1b01,
				0x1c17,
				0x1d80,
				0x1e01,
				0x1f17,
				0x2080,
				0x0304,
				0xba10,
				0x0304,
				0x2c66,
				0x0304,
				0x5504,
				0x5604,
				0x570c,
				0x0304,
				0x3420,
				0x0304,
				0x5c00,
				0x5d40,
				0x5ea0,
				0x5f01,
				0x6002,
				0x6150,
				0x6202,
				0x6300,
				0x6404,
				0x656e,
				0x6645,
				0x0304,
				0x6727,
				0x684f,
				0x6964,
				0x6ac4,
				0x6b0a,
				0x6c46,
				0x6d32,
				0x6e78,
				0x6f43,
				0x70af,
				0x7132,
				0x7223,
				0x0304,
				0x7e08,
				0x7f04,
				0x0303,
				0x0a3e,
				0x0b5d,
				0x0c6c,
				0x0302,
				0x3332,
				0x3487,
				0x358b,
				0x3689,
				0x3739,
				0x388f,
				0x398a,
				0x3a87,
				0x3b31,
				0x0303,
				0x0d30,
				0x0302,
				0x0b86,
				0x0303,
				0x8aF0,
				0x0302,
				0x0904,
				0x0B82,
				0x0303,
				0x4840,
				0x4930,
				0x4a28,
				0x4b20,
				0x4c18,
				0x4d10,
				0x4e08,
				0x0303,
				0x5318,
				0x5410,
				0x5508,
				0x0303,
				0x5710,
				0x5810,
				0x5910,
				0x0303,
				0x5b10,
				0x5c10,
				0x5d10,
				0x0304,
				0x0564,
				0x0303,
				0x932f,
				0x9414,
				0x951b,
				0x981c,
				0x9926,
				0x9c35,
				0x9d42,
				0xa044,
				0xa162,
				0xa464,
				0xa572,
				0xa876,
				0xa980,
				0x0303,
				0xac90,
				0xad88,
				0xae88,
				0xaf04,
				0xb004,
				0xb104,
				0xb207,
				0xb300,
				0xb482,
				0xb504,
				0xb604,
				0xb704,
				0xb882,
				0xb900,
				0xba01,
				0xbb04,
				0xbc04,
				0xbd04,
				0xbe92,
				0xbf8e,
				0xc086,
				0xc104,
				0xc204,
				0xc304,
				0xc485,
				0xc585,
				0xc607,
				0xc704,
				0xc804,
				0xc904,
				0xca86,
				0xcb84,
				0xcc00,
				0xcd04,
				0xce04,
				0xcf04,
				0x0304,
				0x9800,
				0x9904,
				0x9a00,
				0x9b10,
				0x9c00,
				0x9d40,
				0x0303,
				0x7e04,
				0x7f04,
				0x8004,
				0x0303,
				0x8200,
				0x830a,
				0x8430,
				0x0303,
				0xe840,
				0xe940,
				0xea40,
				0x0303,
				0x4f00,
				0x5000,
				0x5100,
				0x0303,
				0x6004,
				0x6104,
				0x6204,
				0x0303,
				0x6404,
				0x6504,
				0x6604,
				0x0303,
				0x1a00,
				0x1b04,
				0x1c7f,
				0x0303,
				0x1e00,
				0x1f00,
				0x2010,
				0x0302,
				0x95fa,
				0x96fa,
				0x9700,
				0x0303,
				0x3f7f,
				0x4020,
				0x4100,
				0x0304,
				0x9800,
				0x9904,
				0x9a00,
				0x9b10,
				0x9c00,
				0x9d20,
				0x0304,
				0x3b63,
				0x3c65,
				0x3d60,
				0x3e58,
				0x3f60,
				0x4055,
				0x4100,
				0x4200,
				0x4314,
				0x4400,
				0x4502,
				0x46e8,
				0x4700,
				0x4845,
				0x49e0,
				0x4a00,
				0x4b8b,
				0x4cc0,
				0x0304,
				0x0800,
				0x1204,
				0x135e,
				0x1404,
				0x155e,
				0x1604,
				0x175e,
				0x1800,
				0x1900,
				0x1a20,
				0x1b00,
				0x1c8b,
				0x1dc0,
				0x1e00,
				0x1f8b,
				0x20c0,
				0x2140,
				0x0300,
				0x3cc4,
				0x0300,
				0x2f01,
				0x2400,
				0x2a31,
				0x2b9c,
				0x2e03,
				0x30ff,
				0x3100,
				0x0300,
				0x0402,
				0x0500,
				0x1400,
				0x1517,
				0x1604,
				0x1751,
				0x400b,
				0x4102 };
				
			const UINT gnTbDSubInputInitEa	  = numberof(gnTbDSubInputInit);
		
		
		
#elif (USE_DIGITAL_INPUT==3)
		
			const UINT gnTbDSubInputInit[] = {	
				0x0300,
				0x2D01,
				0x0302,
				0x8B01,
				0x0300,
				0x0402,
				0x0503,
				0x250A,
				0x4101,
				0x420B,
				0x403C,
				0x0606,
				0x0771,
				0x0802,
				0x09ED,
				0x0A02,
				0x0BED,
				0x0C00,
				0x0D05,
				0x0E00,
				0x0F05,
				0x1005,
				0x1104,
				0x1202,
				0x13D4,
				0x1400,
				0x1515,
				0x1602,
				0x17E9,
				0x0300,
				0x3302,
				0x3401,
				0x3680,
				0x0300,
				0x3858,
				0x0301,
				0x1E0E,
				0x2603,
				0x0301,
				0xB130,
				0x0304,
				0x0698,
				0x0301,
				0xA488,
				0xA588,
				0xA688,
				0xA700,
				0xA800,
				0xA908,
				0x0304,
				0x06B8,
				0x0304,
				0x7528,
				0x7628,
				0x7778,
				0x7878,
				0x7948,
				0x7A48,
				0x7BB8,
				0x7CB8,
				0x7D01,
				0x7E00,
				0x7F02,
				0x8007,
				0x0304,
				0x7308,
				0x7404,
				0x0304,
				0x5110,
				0x52E0,
				0x5302,
				0x5402,
				0x5540,
				0x56C0,
				0x5704,
				0x586E,
				0x5945,
				0x0304,
				0x5A23,
				0x5B4B,
				0x5C64,
				0x5DAA,
				0x5E23,
				0x5F28,
				0x604B,
				0x6173,
				0x623C,
				0x6387,
				0x642D,
				0x652D,
				0x0304,
				0x6E3A,
				0x6F50,
				0x7060,
				0x0303,
				0x163A,
				0x1750,
				0x1860,
				0x0304,
				0x0564,
				0x3B90,
				0x3C78,
				0x3D70,
				0x3E78,
				0x3F24,
				0x404B,
				0x0304,
				0x1202,
				0x13E8,
				0x1402,
				0x15E8,
				0x1602,
				0x17E8,
				0x1B00,
				0x1CBA,
				0x1D00,
				0x1E00,
				0x1FBA,
				0x2000,
				0x0304,
				0x4808,
				0x4908,
				0x4A08,
				0x0304,
				0x2CBB,
				0x0304,
				0x4104,
				0x4208,
				0x4310,
				0x4420,
				0x2E04,
				0x0300,
				0x4F08,
				0x0300,
				0x5900,
				0x5ABA,
				0x5B00,
				0x0304,
				0xA110,
				0x0302,
				0x3337,
				0x348A,
				0x358D,
				0x368B,
				0x373E,
				0x3890,
				0x3984,
				0x3A98,
				0x3B3C,
				0x0303,
				0x0825,
				0x0986,
				0x0A00,
				0x0B25,
				0x0C25,
				0x0D88,
				0x0E00,
				0x0F25,
				0x0302,
				0x3D00,
				0x3E27,
				0x3F36,
				0x4040,
				0x4149,
				0x4258,
				0x4364,
				0x4478,
				0x4589,
				0x46A4,
				0x47BB,
				0x48CF,
				0x49E0,
				0x4AF1,
				0x4BFF,
				0x0302,
				0x5B00,
				0x5C03,
				0x5D0C,
				0x5E19,
				0x5F26,
				0x603F,
				0x6152,
				0x626E,
				0x6382,
				0x64A1,
				0x65B9,
				0x66CE,
				0x67E0,
				0x68F0,
				0x69FF,
				0x0302,
				0x6A00,
				0x6B0B,
				0x6C13,
				0x6D1A,
				0x6E20,
				0x6F2B,
				0x7036,
				0x7149,
				0x725A,
				0x737B,
				0x7498,
				0x75B4,
				0x76CE,
				0x77E7,
				0x78FF,
				0x0302,
				0x8D30,
				0x0302,
				0x2F14,
				0x3040,
				0x3140,
				0x0304,
				0x0900,
				0x0303,
				0x2600,
				0x2710,
				0x2820,
				0x0303,
				0x2E7F,
				0x2F7F,
				0x307F,
				0x0303,
				0x3200,
				0x3300,
				0x3400,
				0x0303,
				0x7700,
				0x7800,
				0x7900,
				0x0303,
				0xA130,
				0xA27F,
				0xA37F,
				0x0300,
				0x402C,
				0x2998,
				0x0304,
				0x1202,
				0x1370,
				0x1402,
				0x15e8,
				0x1602,
				0x17e8,
				0x1b00,
				0x1c22,
				0x1de0,
				0x1e00,
				0x1f22,
				0x20e0,
				0x0302,
				0x9B02,
				0x8B00,
				0x0304,
				0x1202,
				0x13E8,
				0x1402,
				0x15E8,
				0x1602,
				0x17E8,
				0x1B00,
				0x1C1D,
				0x1D10,
				0x1E00,
				0x1F1D,
				0x2010,
				0x0302,
				0x8B00,
				0x0302,
				0x3D00,
				0x3E00,
				0x3F00,
				0x4000,
				0x4100,
				0x4200,
				0x4301,
				0x4402,
				0x4504,
				0x460E,
				0x4720,
				0x483F,
				0x496D,
				0x4AAD,
				0x4BFF,
				0x0302,
				0x5B00,
				0x5C2D,
				0x5D3C,
				0x5E47,
				0x5F50,
				0x605F,
				0x616B,
				0x627E,
				0x638F,
				0x64A9,
				0x65BF,
				0x66D2,
				0x67E2,
				0x68F1,
				0x69FF,
				0x0300,
				0x2767,
				0x2830,
				0x0304,
				0x1B00,
				0x1C2E,
				0x1D80,
				0x1E00,
				0x1F2E,
				0x2080,
				0x2510,
				0x2600,
				0x0300,
				0x8e98,
				0x8f01,
				0x9050,
				0x91b8,
				0x9210,
				0x93ff,
				0x2ae0,
				0x2ce0,
				0x0301,
				0x17fe,
				0x0304,
				0x0564,
				0x3b75,
				0x3c73,
				0x3d65,
				0x3e62,
				0x3f24,
				0x404b,
				0x0302,
				0x8d0f,
				0x0305,
				0x0480 };

				
			const UINT gnTbDSubInputInitEa	  = numberof(gnTbDSubInputInit);
			
		
#elif (USE_DIGITAL_INPUT==5)
		
			const UINT gnTbDSubInputInit[][2] = {	
				{0x14,	0x0       },
				{0x17,	0x0       },
				{0x14,	0x2       },
				{0x14,	0x3       },
				{0x17,	0x2       },
				{0x17,	0x3       },
				{0x14,	0x0       },
				{0x17,	0x0       },
				{0x14,	0x2       },
				{0x14,	0x3       },
				{0x17,	0x2       },
				{0x17,	0x3       },
				{0x11,	0xf0      }, 
				{0x12,	0x1bc     }, 
				{0x13,	0x0       },
				{0x14,	0x3       },
				{0x15,	0x4f52    }, 
				{0x16,	0x13763   },
				{0x17,	0x3       },
				{0x19,	0x400001  },
				{0x1a,	0x104     },
				{0x1b,	0x1       },
				{0x1c,	0xe60263  }, 
				{0x1e,	0x0       },
				{0x21,	0xf1      }, 
				{0x22,	0x0       },
				{0x23,	0x2000    },
				{0x24,	0x3704b3  }, 
				{0x25,	0x220     },
				{0x26,	0x3       },
				{0x27,	0x0       },
				{0x29,	0x0       },
				{0x2b,	0x0       },
				{0x5e,	0xb       }, 
				{0x61,	0x0       },
				{0x62,	0x20001   },
				{0x63,	0x3013031 },
				{0x64,	0x0       },
				{0x65,	0x3       },
				{0x66,	0x101101  },
				{0x67,	0x2001000 },
				{0x68,	0x0       },
				{0x69,	0x5008    },
				{0x6a,	0x10      },
				{0x6b,	0x488f    }, 
				{0x6c,	0x340f0   }, 
				{0x6d,	0x1830076 },
				{0x6e,	0x0       },
				{0x6f,	0x435e    }, 
				{0x71,	0x20c0    }, 
				{0x72,	0x28205   },
				{0x73,	0x4807    },
				{0x74,	0x180     },
				{0x75,	0x10      },
				{0x76,	0x1f09    }, 
				{0x77,	0x1f01    }, 
				{0x78,	0x0       },
				{0x79,	0x10f02   }, 
				{0x7a,	0x1f      }, 
				{0x7b,	0x3201020 },
				{0x7d,	0x0       },
				{0x81,	0x0       },
				{0x82,	0x204f02  }, 
				{0x83,	0x88      },
				{0x84,	0x11f     }, 
				{0x85,	0x3230000 },
				{0x86,	0x0       },
				{0x91,	0x30      },
				{0x92,	0x1cc01ae }, 
				{0x93,	0x3e33f202}, 
				{0x94,	0x80034c11}, 
				{0x95,	0x6002800a}, 
				{0x96,	0x88      },
				{0x97,	0x3ac0040 }, 
				{0x98,	0x3c00040 }, 
				{0x99,	0x8707090a}, 
				{0x9a,	0x7080a   }, 
				{0x9b,	0x0       },
				{0x9f,	0x818f0040}, 
				{0xa1,	0x80      },
				{0xa2,	0x200000  },
				{0xa3,	0x200     },
				{0xa4,	0x218     },
				{0xa5,	0x10      },
				{0xa6,	0x400     },
				{0xa7,	0x2aa155  }, 
				{0xa8,	0xbe0ab   }, 
				{0xaa,	0x1       },
				{0xac,	0x140     },
				/* Lattice Pattern Output Setting */
				{0x11,	0xa0      },
				{0x12,	0x138     },
				{0x13,	0x1033    },
				{0x15,	0xf5e     },
				{0x16,	0x360f    },
				{0x21,	0xf4      },
				//{0x23,	0x2000  },
				{0x23,	0xA000    },
				{0x24,	0x3504b1  },
				{0x27,	0x0       },
				{0x29,	0x0       },
				{0x2b,	0x11000   },
				{0x62,	0x20000   },
				{0x6b,	0x488f    },
				{0x71,	0x20c0    },
				{0x72,	0x28205   },
				{0x74,	0x180     },
				{0x14,	0x0       },
				{0x17,	0x0       },
				{0x14,	0x2       },
				{0x14,	0x3       },
				{0x17,	0x2       },
				{0x17,	0x3       }
			};

				
			const UINT gnTbDSubInputInitEa	  = numberof(gnTbDSubInputInit);
#endif

/* EOF */

